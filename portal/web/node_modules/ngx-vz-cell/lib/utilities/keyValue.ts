import { KeyValue } from './keyValue.model';
export class KeyValueMapping {
     // MapToKeyValue converts an object to an array of key/value pairs so that they can be updated independently.
    public static FromObject(input: Object): KeyValue[] {
        let data: KeyValue[] = [];
        for (let item in input) {
            let element: KeyValue = new KeyValue();
            element.key = item;
            element.value = input[item];
            data.push(element);
        }
        return data;
    }

    // MapFromKeyValue converts an array of key/value pairs to an object. Note that Go interprets this as a map.
    public static ToObject(input: KeyValue[]): Object {
        // Create an empty object literal to propagate with our properties
        let data = {};
        for (let item of input) {
            data[item.key] = item.value;
        }
        return data;
    }
}