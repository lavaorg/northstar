/**
 * Copyright 2017 Verizon Laboratories. All rights reserved.
 * See provided LICENSE file for use of this source code.
 */
import {BaseGraph} from "./graph";
import {Data} from "./data";
import {GraphSettings} from "./settings";
import {GraphType} from "./type";

declare let d3: any;

export class TableGraph extends BaseGraph {
    constructor(data: Data, graphSettings: GraphSettings) {
        super(data, graphSettings);
    }

    // Returns type of this graph.
    public getType(): string {
        return GraphType.Table;
    }

    // Implement base class abstract method.
    public isChart(): boolean {
        return false;
    }

    // Override parent method to return only selected columns.
    public getColumns(): string[] {
        return this.settings.getSelectedColumns();
    }

    // Override parent method to return only selected columns.
    public getRows(): any {
        return this.getGraphData(this.data, this.settings);
    }

    // getGraphData returns the data in the format expected by d3 library.
    protected getGraphData(data: Data, graphSettings: GraphSettings): any {
        let rows = new Array<string[]>();
        let selectedColumns = graphSettings.getSelectedColumns();

        for (let selectedColumn of selectedColumns) {
            let columnIndex = data.getColumnIndex(selectedColumn);
            let rowIndex = 0;

            for (let row of data.getRows()) {
                if (rows.length < rowIndex + 1 ) {
                    rows.push(new Array<string>());
                }

                rows[rowIndex++].push(row[columnIndex]);
            }
        }

        return rows;
    }

    // getDefaultOptions returns options as expected by d3 library.
    protected getGraphOptions(): any {
        // Note that this version of the table chart does not use D3.
        return null;
    }
}
