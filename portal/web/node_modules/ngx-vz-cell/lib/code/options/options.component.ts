import {Component, Input, OnDestroy} from "@angular/core";
import {DialogRef, ModalComponent} from "angular2-modal";
import {BSModalContext} from "angular2-modal/plugins/bootstrap";
import {Router} from "@angular/router";
import {Subscription} from "rxjs";
import {Options} from "../../models/options.model";

export class CellOptionsModalContext extends BSModalContext {
    public options: Options;
}

@Component({
    moduleId: module.id,
    styleUrls: ["../../styles/common.css"],
    templateUrl: "options.component.html",
})

export class CellOptionsModal implements ModalComponent<CellOptionsModalContext>, OnDestroy {
    private context: CellOptionsModalContext;
    public dialog: DialogRef<CellOptionsModalContext>;
    private navigateSubscription: any;
    private router: Router;

    constructor(dialog: DialogRef<CellOptionsModalContext>, router: Router) {
        this.router = router;

        // Set up the dialog and grab our arguments passed in via the context
        this.dialog = dialog;
        this.context = dialog.context;
        dialog.setCloseGuard(this);

        // This prevents a modal dialog from being closed while it is open.
        this.navigateSubscription = this.router.events.subscribe((event) => {
            if (event.constructor.name === "NavigationStart") {
                this.router.navigate([this.router.url]);
                console.log("Please close dialog before navigating.");
            }
        });
    }

    public ngOnDestroy() {
        // Whenever we destroy our component, make sure to turn off the dialog watcher.
        this.navigateSubscription.unsubscribe();
    }

    private ok(options: Options) {
        this.dialog.close(options);
    }

    private cancel() {
        this.dialog.close();
    }
}
