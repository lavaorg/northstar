// Define the supported event types that can be sent/received
// over the web socket. Note that these need to match the types
// defined in the back end web server.
export const EventType = {
    ExecuteCell: "CellExecution",
    ExecuteTransformation: "TransformationExecution",
    ExecuteResult: "ExecutionResult",
    RuntimeStatus: "RuntimeStatus",
    RegisterObserver: "RegisterObserver",
    UnregisterObserver: "UnregisterObserver",
    InternalError: "InternalError",
    Error: "Error",
};

// Defines a web socket event.
export class Event {
    public type: string;
    public id: string;
    public payload: any;

    constructor(obj?: Object) {
        if (obj) {
            this.unmarshal(obj as Event);
        }
    }

    // Returns event payload.
    public getPayload(): string {
        return atob(this.payload);
    }

    // Helper method used to translate events.
    private unmarshal(obj: Event) {
        this.type = obj.type;
        this.id = obj.id;
        this.payload = obj.payload;
    }
}